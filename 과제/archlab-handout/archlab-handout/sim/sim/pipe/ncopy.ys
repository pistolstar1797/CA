#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# 2017-12751 Donghak Lee
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %r10 = dst, %rdx = len
ncopy:

##################################################################
# Loop header
    xorq %rax, %rax
    andq %rdx, %rdx          
    jg L0                   
    ret                     

L0:
    iaddq $-9, %rdx         
    jl T0                   

L1:
    mrmovq (%rdi), %r10     
    mrmovq $8(%rdi), %r11   
    rmmovq %r10, (%rsi)     
    andq %r10, %r10         
    jle L2                  
    iaddq $1, %rax          

L2:
    mrmovq $16(%rdi), %r10  
    rmmovq %r11, $8(%rsi)   
    andq %r11, %r11         
    jle L3                  
    iaddq $1, %rax         	

L3:
    mrmovq $24(%rdi), %r11  
    rmmovq %r10, $16(%rsi)  
    andq %r10, %r10
    jle L4                  
    iaddq $1, %rax         	

L4:
    mrmovq $32(%rdi), %r10 
    rmmovq %r11, $24(%rsi) 
    andq %r11, %r11        
    jle L5                  
    iaddq $1, %rax        	

L5:
    mrmovq $40(%rdi), %r11 
    rmmovq %r10, $32(%rsi) 
    andq %r10, %r10         
    jle L6                 
    iaddq $1, %rax         	

L6:
    mrmovq $48(%rdi), %r10 
    rmmovq %r11, $40(%rsi)  
    andq %r11, %r11       
    jle L7                  
    iaddq $1, %rax         	

L7:
    mrmovq $56(%rdi), %r11 
    rmmovq %r10, $48(%rsi)  
    andq %r10, %r10        
    jle L8                  
    iaddq $1, %rax         	

L8:
	mrmovq $64(%rdi), %r10 
    rmmovq %r11, $56(%rsi)  
    andq %r11, %r11         
    jle L9              	
    iaddq $1, %rax          

L9:
    rmmovq %r10, $64(%rsi)  
    andq %r10, %r10         
    jle LC             		
    iaddq $1, %rax         	

LC:
    iaddq $72, %rdi         
    iaddq $72, %rsi        
    jmp L0                	

T0:
    iaddq $8, %rdx          
    jge T1                  
    ret                   

T1:
    mrmovq (%rdi), %r10    
    mrmovq $8(%rdi), %r11   
    rmmovq %r10, (%rsi)     
    andq %r10, %r10         
    jle Neg1                
    iaddq $1, %rax          

Neg1:
    iaddq $-1, %rdx         
    jge T2                 
    ret                    

T2:
    mrmovq $16(%rdi), %r10  
    rmmovq %r11, $8(%rsi)  
    andq %r11, %r11       
    jle Neg2               
    iaddq $1, %rax          

Neg2:
    iaddq $-1, %rdx         
    jge T3                 
    ret                    

T3:
	mrmovq $24(%rdi), %r11
    rmmovq %r10, $16(%rsi) 
    andq %r10, %r10         
    jle Neg3               
    iaddq $1, %rax         	

Neg3:
    iaddq $-1, %rdx         
    jge T4                 
    ret                    

T4:
    mrmovq $32(%rdi), %r10 
    rmmovq %r11, $24(%rsi)  
    andq %r11, %r11        
    jle Neg4               
    iaddq $1, %rax          

Neg4:
    iaddq $-1, %rdx         
    jge T5               
    ret                    

T5:
	mrmovq $40(%rdi), %r11
    rmmovq %r10, $32(%rsi)  
    andq %r10, %r10        
    jle Neg5               	
    iaddq $1, %rax        	

Neg5:
    iaddq $-1, %rdx         
    jge T6                
    ret                    

T6:
    mrmovq $48(%rdi), %r10  
    rmmovq %r11, $40(%rsi) 
    andq %r11, %r11        
    jle Neg6                
    iaddq $1, %rax          

Neg6:
    iaddq $-1, %rdx         
    jge T7                 
    ret                    

T7:
	mrmovq $56(%rdi), %r11	
    rmmovq %r10, $48(%rsi) 
    andq %r10, %r10        
    jle Neg7               
    iaddq $1, %rax         	

Neg7:
    iaddq $-1, %rdx         
    jge T8                  
    ret                    

T8:
    rmmovq %r11, $56(%rsi)  
    andq %r11, %r11        
    jle Done                
    iaddq $1, %rax          


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
